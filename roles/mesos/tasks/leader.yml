---
- name: create mesos master user
  sudo: yes
  user:
    name: "{{ mesos_master_user }}"
    state: present
  tags:
    - mesos
    - bootstrap
    
- name: create mesos master service over ride directory
  sudo: yes
  file:
    path: /etc/systemd/system/mesos-master.service.d
    state: directory
  tags:
    - mesos
    - bootstrap

- name: create mesos master service over ride
  sudo: yes
  copy:
    dest: /etc/systemd/system/mesos-master.service.d/user.conf
    content: |
      [Service]
      User={{ mesos_master_user }}
  notify:
    - reload systemd daemon
  tags:
    - mesos
    - bootstrap
    
- name: Set mesos master user permissions on the replicated log directory
  sudo: yes
  shell: chown {{ mesos_master_user }} /var/lib/mesos/replicated_log
  tags:
    - mesos
    - bootstrap
    
- name: Set mesos master user permissions on the replicated log directory files
  sudo: yes
  shell: chown {{ mesos_master_user }} /var/lib/mesos/replicated_log/*
  tags:
    - mesos
    - bootstrap
    
- name: Set mesos master user permissions on credential file
  sudo: yes
  shell: chown {{ mesos_master_user }} /etc/sysconfig/mesos-credentials
  tags:
    - mesos
    - bootstrap    

- name: install leader configuration
  sudo: yes
  yum:
    name: "{{ mesos_master_package }}"
    state: present
  tags:
    - mesos
    - bootstrap

- name: configure mesos-master unit file
  sudo: yes
  replace:
    dest: /etc/systemd/system/mesos-master.service
    regexp: "=network.target"
    replace: '=zookeeper.service'
  when: mesos_mode == "leader"
  notify:
    - reload unit files
  tags:
    - mesos

- name: configure mesos-master
  sudo: yes
  template:
    src: mesos-master.sysconfig.j2
    dest: /etc/sysconfig/mesos-master
  notify:
    - restart mesos leader
  tags:
    - mesos

- name: write leader credentials
  sudo: yes
  when: do_mesos_framework_auth|bool or do_mesos_follower_auth|bool
  template:
    src: master-credentials.j2
    dest: /etc/sysconfig/mesos-credentials
    mode: 0600
  notify:
    - restart mesos leader
  tags:
    - mesos

- name: delete leader credentials
  sudo: yes
  when: not do_mesos_framework_auth|bool and not do_mesos_follower_auth|bool
  file:
    dest: /etc/sysconfig/mesos-credentials
    state: absent
  tags:
    - mesos

- name: wait for zookeeper service to be registered
  wait_for:
    host: "{{ mesos_zk_dns }}"
    port: "{{ mesos_zk_port }}"
    delay: 10
    timeout: 300
    state: present
  tags:
    - marathon

- name: wait for zookeeper to listen
  command: "/usr/local/bin/zookeeper-wait-for-listen.sh localhost"

- name: create zookeeper acl
  sudo: yes
  run_once: yes
  command: "{{ mesos_zk_acl_cmd }}"
  notify:
    - restart mesos leader
  when: zk_mesos_user_secret is defined
  run_once: true
  register: zk_acl_mesos
  until: zk_acl_mesos.rc == 0
  retries: 5
  delay: 10
  tags:
    - mesos

- name: write iptables configuration
  run_once: true
  command: consul-cli kv-write --token={{ consul_acl_secure_token }} secure/mesos/leader/ip_tables {{ do_mesos_iptables }}
  tags:
    - mesos

- name: give consul template privileges to run mesos leader ip tables
  sudo: yes
  template:
    dest: /etc/sudoers.d/consul-template-mesos-leader-iptables-auth
    src: consul-template-mesos-leader-iptables-auth.j2
  tags:
    - mesos

- name: deploy iptables configuration
  sudo: yes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: mesos-leader-consul.cfg
      dest: /etc/consul-template/config.d
    - src: mesos-leader-iptables.tmpl
      dest: /etc/consul-template/templates
  notify:
    - restart consul-template
  tags:
    - mesos

- include: nginx-proxy.yml
